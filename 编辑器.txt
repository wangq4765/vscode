*编辑器.txt*



TODO vs


-----------设置-------------

vs 底部显示局部变量的窗口 打开？
之前不小心把vs底部的局部变量窗口关掉了。一直找不到。
方法：先把项目运行起来，调试状态下，点开"调试"->"窗口"，就能看到局部变量窗口了。

VS2013 断点窗口怎么调出来？
哪里需要断点就鼠标点哪里
点击红色圈圈位置
需要所有的窗口就CTRL+ALT+B
菜单-调试-窗口-断点

Visual Studio 快速定位文件位置的方法
用idea有一个瞄准的符号可以快速定位文件位置，Visual Studio没有这个但是有替代方案
工具-选项--项目和解决方案--常规--在解决方案资源管理器中跟踪活动项
tools-options-Projects and Solutions-Track Active Item in SOlution Exploer
勾选后就可以了
PS：MyEclipse有“Link with Editor”，而vscode则自带



-----选中某个词后，单击右键的查看定义、转到定义、转到声明、查找所有引用功能都非常实用(vs的快捷键和vscode非常相似)-----

跳转到指定行号：Ctrl + G

使用Tab增加缩进，Shift+Tab减少缩进

删除光标前的某个单词内的所有字符：Ctrl+BackSpace(整体地删除单词)

复制光标所在行的代码，并在下面一行生成：Ctrl+E，V(新版，这个蛮有用的)

调用智能提示(输入联想)：Ctrl + J 或Alt + →
强制智能感知****显示参数信息： Ctrl+空格

返回上一视图：Ctrl + -
返回下一视图：Ctrl + Shift + -

Alt+↓ 当前行和下面一行交互位置(特别实用,可以省去先剪切,再粘贴了)
Alt+↑ 当前行和上面一行交互位置(同上)

将选中的全部变小写：Ctrl + U
将选中的全部变大写：Ctrl + Shift + U

行编辑，当光标停在某一行(不用选中该行)：
复制整行：Ctrl + C
剪切整行：Ctrl + X
粘贴整行：Ctrl + V
删除整行：Ctrl + L



跳转到定义处：F12(引用和f12互补)
跳转到下一个Error或Warning：当有多个错误时可以按F8逐个跳转
重命名：比如要修改一个方法名，可以选中后按F2，输入新的名字，回车，会发现所有的文件都修改过了

VS 2017在某一次更新之后，默认设置了Ctrl+单击会跳转到定义
f12就可以跳转到定义了
source insight、vscode、qtcreator都是Ctrl+鼠标点击，用习惯Ctrl+鼠标点击，而且F12键相对左手来说太远了
果然习惯了按Ctrl之后全选变量，变成跳转到定义就很难受

VS设置断点等调试技巧
f5：开始调试/跳转到下一断点(自动跳到下一个断点处，只有一个断点则执行到底)
shift+f5：停止调试
f9：添加/删除断点
f10：逐过程(快，不会进入函数)
f11：逐语句(慢，进入调用的函数)
shift+f11：跳出当前函数(与f11相反的功能)
左边黄色的箭头可以向上拉：表示语句执行到这里了(复现问题)



匹配括号：当代码很长时，将光标置于括号旁，使用Ctrl + ]可以快速定位与当前括号相匹配的另一个括号(回退可以使用两次)

Visual Studio 找到匹配括号问题
在使用vs时有时大括号内的代码比较长，这时想要找到匹配的反括号时可以使用：
“Ctrl+}”（光标会跳转到反括号）。
此方法适用于[ ] , ( ) , { } , “ ” 。



VS转到定义与返回
在VS中按F12可以转到定义，按Ctrl+- 可以返回(直接从定义转到引用处则点击“引用”)

vs 中怎么查看一个方法被哪些方法调用过？
点击方法左上角的"1个引用"最方便(和f12跳转方向相反)
把光标移到方法上,按Shift+F12(ctrl+k+r)
把光标放在方法上，右键，"Find All References"
放到方法名那里，右键 查找所有引用



-----------下面快捷键的K是key的意思-------------

格式化部分代码：Ctrl + K + F
格式化当前文档代码：Ctrl + K + D

vs如何快速批量注释，就是全部加上//的？
注释：Ctrl + K + C(C：comment)
取消注释：Ctrl + K + U(U：uncomment)

书签的作用：便于在不同程序文件之间切换
添加/删除书签：Ctrl +K + K
上一书签：Ctrl +K + P(P = positive)
下一书签：Ctrl +K + N(N = negative)

visual studio——快速折叠所有代码和展开所有代码
Ctrl + M + O：折叠所有方法
Ctrl + M+ M：折叠/展开当前方法
Ctrl + M + L：展开所有方法
折叠任意连续代码段（折叠≠注释，依然会执行）
#pragma region 折叠name
......
#pragma endregion 折叠注释
显示效果为：折叠name 折叠注释



TODO eclipse


eclipse中的项目不能全部revert(配置也还原了)，vs可以(修改配置configlocal.xml)

eclipse的项目上出现红叉(是编译的问题)：Project→Clean→点击OK(Clean all projects+Build the entire workspace)
Eclipse项目没错误但有红叉(反复修改配置导致的错误)：重新down代码

激活eclipse新添加的代码：在弹窗中点击Restart(代码少的情况自动生效)
PS：线程假死需要Terminate(CNX/CNM/QRY)+Remove Launch(删除当前的面板)+Resume(继续)
激活vs新添加的代码：停止调试+重新生成解决方案(调试的时候可以修改代码但无法生效，不能修改控件)
PS：eclipse中有Build Automatically所以不需要停止调试再重新编译(eclipse每次保存都自动编译)
---build automatically 是指你的java代码改了后，eclipse会自动把改过的java代码编译成class



-----------设置-------------

eclipse 中如何取消断点？
如果在代码中有断点，加载项目启动服务时，会在断点处提示有断点。而且有时候不止一个，我们就需要一个一个的跳过。对于新人来讲 有时候会不知道怎么办？
第一种方法：我们可以点击windows---->ShowView即可找到BreakingPionts双击即可。   
第二种方法：如果在ShowView中没有找到BreakingPionts我们可以点击windows---->ShowView----->other---->debug------>breakingPionts.也是可以的。

eclipse在debug模式下如何查看某变量的值？
当代码运行到某一行的时候右键本行或者上面的变量，inspect(ctrl+shift+I)。或者直接将鼠标移动到变量上也可以看到变量的值(和vs一样)。
PS：xml格式无法在eclipse中悬浮显示(vs可以显示xml格式)

eclipse 调试的查看变量的窗口怎么找出来？
点击 eclipse 工具栏的 window==>show View ==>Other
找到DEBUG 点击开 有一个Variables 这个就是调试的时候的变量显示窗口(所有的变量)

eclipse中查看错误或者警告的窗口不见了，怎么找到啊？
你好：在eclipse中的工具栏选择window--->show view--->Other--->搜索problems就找到了，
这个所有的展示都可以在里面找到。

eclipse怎么样停止程序的运行？
可以用下面的两种方法结束运行：
1、点击下面控制台那里有个红色的四方形的按钮(关闭当前控制台)
2、点击红色方块后面的XX也可以(关闭所有的终端控制台)
ps：vs中也有红色的四方形的按钮(左上角)，是停止调试的意思

console总共有以下几个图标：
1）Terminate：停止当前执行线程
2）Remove Launch：删除当前的面板(非停止状态不可用)
3）Remove All Terminated Launches：删除所有停止状态的面板
4）Clear Console：清空当前控制台
5）Scroll Lock：锁定滚动条
6）Word Warp：控制台显示换行
7）Show Console When Standard Out Changes：当输出变更时显示在控制台
8）Show Console When Standard Error Changes：当错误变更时显示在控制台
9）Pin Console：钉住当前Console，当多个控制台的情况下，控制台有更新会自动跳到前台来，钉住后类似于置顶功能
10）Display Selected Console：选择不同的控制台
11）Open Console：打开一个新的控制台类型
其中的New Console View和原来的Console显示的内容是一样的，只是多开了一个选项卡显示



-----选中某个词后，单击右键的查看定义、转到定义、转到声明、查找所有引用功能都非常实用-----

ctrl+m：最大化当前的Edit或View(再按则反之)

ctrl+o：快速outline视图(不开Outline窗口的同学，这个快捷键是必不可少的)

alt+? 或 alt+/：自动补全代码或者提示代码
Ctrl+1 快速修复(最经典的快捷键,就不用多说了)

Alt+↓ 当前行和下面一行交互位置(特别实用,可以省去先剪切,再粘贴了)
Alt+↑ 当前行和上面一行交互位置(同上)
Alt+← 前一个编辑的页面
Alt+→ 下一个编辑的页面(当然是针对上面那条来说了)



eclipse中怎样设置断点和单步执行？快捷键是什么呢？
第一步：设置断点：在该行最前面边框双击(vs只需单击) 或快捷键：Ctrl+Shift+B
第二步：Debug 运行启动
第三步：
运行到断点后(快捷键太紧凑了😂)：
使用快捷键F5,F6,F7单步执行。
F5：Step into/进入该行的函数内部
F6：Step over/一行一行执行(最好)
F7：Step return/退出当前的函数
F8：到下一个断点(次好)
ctrl+r：运行至行(超好用，可以节省好多的断点)
在eclipse里面多试试就熟悉了(不如点击图标，所有编辑器都一样)
PS：6和8是偶数，5和7是奇数


eclipse中调试箭头找不到的情况下如何定位到箭头所在，不运行下一步的情况下(要不然又要从新调试)
运行下一步的情况：直接按F6就行了
不运行下一步的情况：在Debug视图中双击线程到达当前位置

eclipse 在DEBUG的时候怎么拖动箭头啊。
用VS做C#的时候，可以拖动debug箭头让程序执行上一句或者跳过几句，我觉得很方便。
但是eclipse仿佛不支持这个功能？ 请问可以做到么？
不是Eclipse不支持，是Java语言不支持这种跳过代码不执行的方式

eclipse在调试的时候怎么把箭头向上拉？
在 Eclipse 中，当你遇到断点并暂停程序时，可以通过以下方法移动调试进度之前的代码，即"把箭头向上拉"：
1. 在代码行数边栏上右键点击暂停的代码行，选择 "Run to Line"。这会使程序执行到你选择的那一行，并在那里暂停。
2. 将调试视图切换到“Debug" 视图（在工具栏的右上角找到一个类似蜘蛛网的图标，或者选择 "Window" > "Perspective" > "Open Perspective" > "Debug"）。
3. 选中 “Debug" 视图中的线程或堆栈帧，右键点击后在菜单中选择“Drop to Frame”。此操作会使程序回退到当前选中方法的开始。注意，这不能回退时间，已执行的操作是不会被还原的。
请注意，这种方法可能使程序处于无效状态，因为已执行的代码无法还原。在使用此功能的时候，谨慎操作。



按住Ctrl+鼠标左键悬停就可以实现跳转，类似于超链接

小弟想知道eclipse中有没有那种类似于转到定义或是声明的功能？
如题 就是在代码中有变量或是函数的话我点一下右键跳到变量或函数定义的地方(F3)。eclipse有没有这样的功能啊
有的，若想直接转到定义或者使用的部分，直接将光标移动到目标代码上面，然后按住ctrl键的同时左键点击目标代码就行了。

按住ctrl+鼠标移动到变量或函数处
Open Declaration(f3)：打开声明
Open Implementation(ctrl+t)：打开实现
Open Return Type：打开返回类型

Eclipse中，open declaration;open implementation;open super implementation
这三者有何区别啊？求大神指导
open declaration：是打开该方法的接口文件(一般没实在意义，只是简单一句)
open implementation：是打开具体实现该方法的类文件(具体逻辑的处理地方，方法的主要实现的地方)
open super implementation：是打开实现该方法的类文件的父文件(几乎没人用这个)
这3个都是Eclipse或者MyEclipse的在方法上按住ctrl键的快捷键



----------多键---------

ctrl+shift+f：格式化代码

ctrl+shift+r：搜索工程中的文件(默认搜索路径是MES.Env/config/bpels/CNXsvr)

ctrl+/：自动注释当前行或者选择的多行
ctrl+shift+/：自动注释掉选择的代码块

eclipse收起展开所有方法的快捷键
收缩所有方法，java、js、xml都可以：Ctrl+Shift+'/'(小键盘的‘/‘)
展开所有方法：Ctrl+Shift+'*'(小键盘的)



TODO vscode

自动保存：file -> AutoSave(中文界面下“文件”->“自动保存”)或者 ctrl+Shift+P，输入 auto

--按esc取消智能提示(其实大部分按键都可以实现)
visual studio code智能提示：按住tab表示确定(与输入汉字时的space类似)     -----默认情况下，Tab 或 Enter 是接受键盘触发器

-----下面的快捷键都可以通过点击实现-----

打开终端：Ctrl + `

ctrl+shift+v/点击预览：预览markdown

ctrl+b(bar)：显示或隐藏左侧目录栏，也就是文件资源管理器。这个快捷键可以方便地在编辑区和目录栏之间切换，节省空间和时间

ctrl+p：搜索文件(everything)
ctrl+shit+f＞ctrl+f：全局搜索，就是左边的搜索，但是和输入法冲突了，巨坑啊(bb doc)

查找 ctrl+f
查找替换 ctrl+H
跳转到某行 ctrl+G

ctrl+/ 注释
ctrl+d：下一个匹配的也被选中
ctrl+backspace：删除上一个词
shift+alt：竖行编辑(在一个长方体内编辑)
shift+tab: 与 tab 的效果相反(发现shift是递归的)
ctrl+shift+l：同时选中所有匹配编辑(与当前行或选定内容匹配)

vscode行编辑，当光标停在某一行(不用选中该行)：
复制整行：Ctrl + C
剪切整行：Ctrl + X(不需要按ctrl+l)
粘贴整行：Ctrl + V
全选整行：Ctrl + L(重复则选中下一行代码) --vs中是删除整行

移动到行首：Home
移动到行尾：End
移动到文件结尾：ctrl+End
移动到文件开头：ctrl+Home
从光标到行尾的内容：Shift+End
从光标到行首的内容：Shift+Home

f1 或 ctrl+Shift+P(俗称万能键)：打开命令面板。在打开的输入框内，可以输入任何命令

f11：全屏显示(再次按则恢复)
f8：跳转到下一个Error或Warning：当有多个错误时可以按f8逐个跳转

f12：移动到定义处
shift+f12：找到所有的引用示例：选中foo()函数,然后按住快捷键「Shift + f12」，就能看到 foo()函数在哪些地方被调用了，比较实用

f2：比如要修改一个方法名，可以选中后按f2，输入新的名字，回车，会发现所有的文件都修改过了(f2改变量/函数名，不改定义)
ctrl+f2：同时修改本文件中所有匹配的

ctrl + KZ 禅模式：注意这里的禅模式的按法是按下 ctrl + K (二者一起按下去) ，之后都松开，然后按一下Z就行了(英文模式)，连按两下ESc退出禅模式



----------多键---------

vscode花括号跳转(快捷键)
Mac Cmd + Shift+\
Windows Ctrl + Shift+\

vscode中ctrl+shift+p是啥意思？ 
ctrl+shift+p其实就是调出用于执行命令的输入框，这些命令来自VSCode自带已经插件扩展的命令。
PS：Ctrl + Shift + P = F1 	显示命令面板 Show Command Palette

格式化：Shift键 + Alt键 + f键
请问代码格式化有什么作用？？？？？
代码格式化，主要是整理原代码的缩进，以及运算符的间隔等
目的是使代码缩进清晰，更容易阅读

VSCode 代码块/全文折叠/展开快捷键
常用的两类场景(注意要操作的范围)：
要操作光标所在文件中的所有代码块：
折叠所有 Ctrl+K+0
展开所有 Ctrl+K+J
仅仅操作光标所处代码块内的代码：
折叠 Ctrl+Shift+[
展开 Ctrl+Shift+]

---鼠标放在图标上会显示快捷方式---
ctrl+Shift+E：显示资源管理器
ctrl+Shift+f：显示搜索
ctrl+Shift+D：显示 Debug
ctrl+shift+g：显示git
ctrl+Shift+U：显示 Output
ctrl+Shift+Y：打开调试控制台



----------下面是解决问题----------

console有些细节的东西没法看到,debug的好处就是可以直接到断点看具体细节,包括函数内部的互相跳转,整个运转流程,不是一个量级的

不同文件夹下可以存在相同的文件名
可以直接修改后缀名，文件图像随之改变

为啥不用写图片路径？
绝对路径与相对路径
同文件夹引用不用写路径

鼠标操作：
在当前行的位置，鼠标点击，可以选中当前行
用鼠标单击文件的行号，可以选中当前行
在某个行号的位置，上下移动鼠标，可以选中多行



FIXME 书签功能


Bookmarks(有快捷键)和todotree功能很相似

一般用在代码比较长的情况下，可以快速找到某段代码的位置。
说白了就是标记，顾名思义，看书里某页处放个书签，就是起标记作用的嘛！

代码添加书签/快速查找/定位
“代码添加书签,方便查阅大量代码时,快速切换需要浏览的位置和在多个项目中无缝切换;” 

可以右击书签(或者alt+b)
跳至上一个：alt+↑
跳至上一个：alt+↓
vscode原始的功能是：向上/向下移动一行
按Alt + 向上箭头当前行向上移动，按Alt + 向下箭头(Mac: option+ 向下箭头))当前行向下移动。

用visual studio阅读代码，可以使用“书签”功能（即F2、Ctrl+F2），在某行代码上做一个“书签”，下次可以方便的回来继续阅读。
eclipse有没有类似的功能和快捷键？
在左侧的标尺上右键 --> Add Bookmark....
快捷键还真不知道

Eclipse添加和查看书签
添加书签：
在编辑框左边栏右击 > Add Bookmark > 编辑书签名称（可以直接使用默认名称）> OK
查看书签：
Window > Show View > Other > 输入book字样会出现Bookmarks > OK
然后就可以在IDE的底部出现的Bookmarks视图查看和编辑所有书签了



TODO 上个光标


和撤销(ctrl+z)/恢复(ctrl+y)不一样，是撤销/恢复定位

--vs--
返回上一步光标位置：ctrl+-
返回下一步光标位置：ctrl+shift+-

vscode转到定义及返回 快捷键
ctrl + 鼠标左击 跳转定义
alt + ← 返回

VSCode 返回上一个光标 (上一个浏览位置)
Ctrl + 鼠标左击跳到定义
返回: Alt + ← ;或者 鼠标侧键(返回下一个光标：Alt + →)

word中像vscode中的返回上一步
快捷键Ctrl + Alt + Z可以轻松实现返回上一步的功能(限制在三个地方)，和Shift+F5搭配使用(跳转到上次编辑的位置)
PS：在宏中使用这些命令，可以实现与快捷键相似的操作

excel中像vscode中的返回上一步快捷键是什么？
在 Excel 中，可以使用快捷键 Ctrl + Z 来撤销上一步操作。如果需要重复上一步操作，则可以使用快捷键 Ctrl + Y。

在 word 文档中跳转后如何返回到之前的位置(适用于超链接和引用)？
点开超链接或者引用标以后，按下 Alt + 左方向即可跳回之前的阅读页
这才是正确答案，别人都是答非所问
简单明了，直接解决问题，其它回答都是啥啊，扯一大篇，一点用没有

如何在 Word 中快速返回到前次(光标)编辑的位置
1、“ctrl+z” 这个快捷键是退回上一步操作
2、“Shift+F5” 是将插入点返回到上次编辑的位置，Word 能够记忆前三次的编辑位置
在打开文档时如果想返回到上次编辑的地方，打开文档之后立即按 “Shift+F5” 快捷键，则光标﻿可以立即移动到上次退出 Word 时最后一次编辑的位置。



TODO 全局查找


word无法全局搜索，需要第三方
everything可以搜索所有文件😂


vscode在资源管理器中查找文件名：ctrl + P

vscode 解决 ctrl+shift+f 无效问题(直接在左边点击搜索图标也可以全局搜索)
1. vscode ctrl+shift+f快捷键 一直无效，查看vscode配置没问题
2. 猜想应该是和某个系统的快捷键冲突了，经过查找。发现是win10 自带的输入冲突
细化一下：打开设置页面搜语言（在首选语言界面点击“中文（简体，中国）”）→点选项→点微软拼音→点选项→点按键→把热键（ctrl+shift+f）关闭即可
搜狗拼音输入法，一样有这个问题
原来是输入法的锅


Visual Studio在整个项目中查找、替换
方法：编辑->查找和替换->在整个解决方案中查找
快捷键：Ctrl+Shift+f(vscode也一样)

如何在Visual Studio中搜索文件名？
在Eclipse中，你可以通过按项目搜索一个文件CTRL+SHIFT+R
在Visual Studio中有没有办法做到这一点？
只需点击：CTRL + ;(搜索解决方案资源管理器)
我可能每天浪费30分钟，只是在解决方案资源管理器中寻找正确的文件。这是我最喜欢的新快捷方式！
不幸的是，这不仅限于文件名搜索，还包括符号


Eclipse全局查找文件是ctrl+shift+r

Eclipse全局搜索代码步骤 
1、使用快捷键“ctrl+H”打开文件搜索对话框，选择“File Search”标签，在Containing text中输入你需要搜索的字符串，在Scope中，选择你要搜索的范围(Workspace就是全局)，点击Search。 
2、在Search视图中，会列出搜索得到的结果，点击Show Next Match(Ctrl+.)跳转到下一个匹配的代码。 



TODO 文件路径


vscode会自动打开文件路径

eclipse：Link with Editor

在VS解决方案资源管理器中自动定位当前编辑中的文件
依次点击【工具】- 【选项】 - 【项目和解决方案】-【常规】- 勾选【在解决方案资源管理器中跟踪活动项】
困惑了我好久，谢谢大佬


